{"ast":null,"code":"var _jsxFileName = \"/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/DetailsFoodScreen.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodBasicInfo from './FoodBasicInfo';\nimport FoodButtons from './FoodButtons';\nimport { ContextAplication } from '../context/ContextAplication';\nimport './CSS/DetailsFoodScreen.css';\nexport default function DetailsFoodScreen(props) {\n  const {\n    id\n  } = props.props.match.params;\n  const {\n    getFoodScreenInfos\n  } = useContext(ContextAplication);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    getFoodScreenInfos(id);\n    setIsLoading(false);\n  }, [id]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, \"Carregando...\"), !isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, !isLoading && /*#__PURE__*/React.createElement(FoodBasicInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 28\n    }\n  }), !isLoading && /*#__PURE__*/React.createElement(FoodButtons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 28\n    }\n  })));\n}\nDetailsFoodScreen.propTypes = {\n  props: PropTypes.string.isRequired,\n  match: PropTypes.string.isRequired,\n  params: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/DetailsFoodScreen.jsx"],"names":["React","useState","useEffect","useContext","PropTypes","FoodBasicInfo","FoodButtons","ContextAplication","DetailsFoodScreen","props","id","match","params","getFoodScreenInfos","isLoading","setIsLoading","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAO,6BAAP;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAASD,KAAK,CAACA,KAAN,CAAYE,KAAZ,CAAkBC,MAAjC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAyBV,UAAU,CAACI,iBAAD,CAAzC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,kBAAkB,CAACH,EAAD,CAAlB;AACAK,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHQ,EAGN,CAACL,EAAD,CAHM,CAAT;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADhB,EAEG,CAACA,SAAD,iBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACA,SAAD,iBAAc,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnB,EAEK,CAACA,SAAD,iBAAc,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFnB,CAHJ,CADF;AAWD;AAEDN,iBAAiB,CAACQ,SAAlB,GAA8B;AAC5BP,EAAAA,KAAK,EAAEL,SAAS,CAACa,MAAV,CAAiBC,UADI;AAE5BP,EAAAA,KAAK,EAAEP,SAAS,CAACa,MAAV,CAAiBC,UAFI;AAG5BN,EAAAA,MAAM,EAAER,SAAS,CAACa,MAAV,CAAiBC;AAHG,CAA9B","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodBasicInfo from './FoodBasicInfo';\nimport FoodButtons from './FoodButtons';\nimport { ContextAplication } from '../context/ContextAplication';\nimport './CSS/DetailsFoodScreen.css';\n\nexport default function DetailsFoodScreen(props) {\n  const { id } = props.props.match.params;\n  const { getFoodScreenInfos } = useContext(ContextAplication);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    getFoodScreenInfos(id);\n    setIsLoading(false);\n  }, [id]);\n\n  return (\n    <div>\n      {isLoading && <h1>Carregando...</h1>}\n      {!isLoading && (\n        <div className=\"details-screen\">\n            {!isLoading && <FoodBasicInfo />}\n            {!isLoading && <FoodButtons />}\n        </div>\n      )}\n    </div>\n  );\n}\n\nDetailsFoodScreen.propTypes = {\n  props: PropTypes.string.isRequired,\n  match: PropTypes.string.isRequired,\n  params: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}