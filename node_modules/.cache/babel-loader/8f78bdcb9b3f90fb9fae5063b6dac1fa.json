{"ast":null,"code":"var _jsxFileName = \"/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/context/ContextAplication.jsx\";\nimport React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFirstMeals, getMealById, getByIgredient } from '../services/foodApi';\nimport { getFirstDrinks, getDrinksByIngredient, getDrinkByID } from '../services/drink-api';\nexport const ContextAplication = createContext();\nconst user = {\n  email: '',\n  password: ''\n};\n\nconst AplicationProvider = ({\n  children\n}) => {\n  const [informationsUser, setInformationsUser] = useState(user);\n  const [searchInputVisible, setSearchInputVisible] = useState(false);\n  const [Data, setData] = useState([]);\n  const [recipeInfo, setRecipeInfo] = useState([]);\n  const [id, setId] = useState('');\n  const [recomendation, setRecomendation] = useState([]);\n  const [ingredientFilter, setingredientFilter] = useState('');\n\n  const saveInput = input => {\n    const inputsLogin = {\n      email: input.email,\n      password: input.password\n    };\n    setInformationsUser(inputsLogin);\n  };\n\n  const searchInput = () => {\n    setSearchInputVisible(!searchInputVisible);\n  };\n\n  const getMeals = () => {\n    switch (ingredientFilter) {\n      case '':\n        getFirstMeals().then(answer => setData(answer.meals));\n        break;\n\n      default:\n        getByIgredient(ingredientFilter).then(answer => setData(answer.meals));\n    }\n  };\n\n  const getDrinks = () => {\n    switch (ingredientFilter) {\n      case '':\n        getFirstDrinks().then(answer => setData(answer.drinks));\n        break;\n\n      default:\n        getDrinksByIngredient(ingredientFilter).then(answer => setData(answer.drinks));\n    }\n  };\n\n  const getFoodScreenInfos = foodId => {\n    getMealById(foodId).then(data => {\n      setRecipeInfo(data.meals[0]);\n      setId(foodId);\n    });\n    getFirstDrinks().then(data => setRecomendation(data.drinks));\n  };\n\n  const getDrinkScreenInfos = drinkId => {\n    getDrinkByID(drinkId).then(data => {\n      setRecipeInfo(data.drinks[0]);\n      setId(drinkId);\n    });\n    getFirstMeals().then(data => setRecomendation(data.meals));\n  };\n\n  const context = {\n    informationsUser,\n    saveInput,\n    searchInputVisible,\n    searchInput,\n    Data,\n    getMeals,\n    getFoodScreenInfos,\n    getDrinkScreenInfos,\n    recipeInfo,\n    recomendation,\n    id,\n    ingredientFilter,\n    getDrinks,\n    setData,\n    setingredientFilter\n  };\n  return /*#__PURE__*/React.createElement(ContextAplication.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nAplicationProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default AplicationProvider;","map":{"version":3,"sources":["/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/context/ContextAplication.jsx"],"names":["React","createContext","useState","PropTypes","getFirstMeals","getMealById","getByIgredient","getFirstDrinks","getDrinksByIngredient","getDrinkByID","ContextAplication","user","email","password","AplicationProvider","children","informationsUser","setInformationsUser","searchInputVisible","setSearchInputVisible","Data","setData","recipeInfo","setRecipeInfo","id","setId","recomendation","setRecomendation","ingredientFilter","setingredientFilter","saveInput","input","inputsLogin","searchInput","getMeals","then","answer","meals","getDrinks","drinks","getFoodScreenInfos","foodId","data","getDrinkScreenInfos","drinkId","context","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFirstMeals, getMealById, getByIgredient } from '../services/foodApi';\nimport { getFirstDrinks, getDrinksByIngredient, getDrinkByID } from '../services/drink-api';\n\nexport const ContextAplication = createContext();\n\nconst user = { email: '', password: '' };\n\nconst AplicationProvider = ({ children }) => {\n  const [informationsUser, setInformationsUser] = useState(user);\n  const [searchInputVisible, setSearchInputVisible] = useState(false);\n  const [Data, setData] = useState([]);\n  const [recipeInfo, setRecipeInfo] = useState([]);\n  const [id, setId] = useState('');\n  const [recomendation, setRecomendation] = useState([]);\n  const [ingredientFilter, setingredientFilter] = useState('');\n\n  const saveInput = (input) => {\n    const inputsLogin = {\n      email: input.email,\n      password: input.password,\n    };\n    setInformationsUser(inputsLogin);\n  };\n\n  const searchInput = () => {\n    setSearchInputVisible(!searchInputVisible);\n  };\n\n  const getMeals = () => {\n    switch (ingredientFilter) {\n      case '':\n        getFirstMeals()\n          .then((answer) => setData(answer.meals));\n        break;\n      default:\n        getByIgredient(ingredientFilter)\n          .then((answer) => setData(answer.meals));\n    }\n  };\n\n  const getDrinks = () => {\n    switch (ingredientFilter) {\n      case '':\n        getFirstDrinks()\n          .then((answer) => setData(answer.drinks));\n        break;\n      default:\n        getDrinksByIngredient(ingredientFilter)\n          .then((answer) => setData(answer.drinks));\n    }\n  };\n\n  const getFoodScreenInfos = (foodId) => {\n    getMealById(foodId).then((data) => {\n      setRecipeInfo(data.meals[0]);\n      setId(foodId);\n    });\n    getFirstDrinks().then((data) => setRecomendation(data.drinks));\n  };\n\n  const getDrinkScreenInfos = (drinkId) => {\n    getDrinkByID(drinkId).then((data) => {\n      setRecipeInfo(data.drinks[0]);\n      setId(drinkId);\n    });\n    getFirstMeals().then((data) => setRecomendation(data.meals));\n  };\n\n  const context = {\n    informationsUser,\n    saveInput,\n    searchInputVisible,\n    searchInput,\n    Data,\n    getMeals,\n    getFoodScreenInfos,\n    getDrinkScreenInfos,\n    recipeInfo,\n    recomendation,\n    id,\n    ingredientFilter,\n    getDrinks,\n    setData,\n    setingredientFilter,\n  };\n\n  return (\n    <ContextAplication.Provider value={context}>\n      {children}\n    </ContextAplication.Provider>\n  );\n};\n\nAplicationProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default AplicationProvider;\n"]},"metadata":{},"sourceType":"module"}