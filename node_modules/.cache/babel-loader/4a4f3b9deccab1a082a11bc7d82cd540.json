{"ast":null,"code":"var _jsxFileName = \"/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/helpersComponents/CockTailsControlsRecipeProgress.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nfunction doneRecipe(recipeInfo, setGoToRoute) {\n  const {\n    idDrink,\n    strDrink,\n    strDrinkThumb,\n    strAlcoholic,\n    strCategory\n  } = recipeInfo;\n  const mealInfo = {\n    id: idDrink,\n    type: 'comida',\n    area: '',\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strDrink,\n    image: strDrinkThumb,\n    doneDate: new Date(),\n    tags: strTags\n  };\n  let storage = JSON.parse(localStorage.getItem('doneRecipes'));\n\n  if (!storage) {\n    storage = [];\n    const newStorage = [...storage, mealInfo];\n    localStorage.setItem('doneRecipes', JSON.stringify(newStorage));\n  } else {\n    const newStorage = [...storage, mealInfo];\n    localStorage.setItem('doneRecipes', JSON.stringify(newStorage));\n  }\n\n  setGoToRoute(true);\n}\n\nfunction CockTailsControlsRecipeProgress(props) {\n  const [goToRoute, setGoToRoute] = useState(false);\n  const {\n    valuesToRender\n  } = props;\n  const {\n    inProgressDrink,\n    data,\n    checkLocalStorage,\n    buttonEnabled,\n    id,\n    checked\n  } = valuesToRender;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, inProgressDrink.strDrink), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, inProgressDrink.strCategory), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \" Ingredients \"), data.map((element, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: element.meal,\n    \"data-testid\": `${i}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: i,\n    type: \"checkbox\",\n    checked: checkLocalStorage.cocktails[id][i].checked,\n    name: element.drink,\n    onClick: event => handleChecked(event, checked.checkbox[i].checked, 'cocktails', valuesToRender),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, element.meal), element.mensure))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"instructions\",\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Instru\\xE7\\xF5es\"), inProgressDrink.strInstructions), buttonEnabled ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start-button in-progress\",\n    enable: true,\n    \"data-testid\": \"finish-recipe-btn\",\n    onClick: () => doneRecipe(inProgressDrink, setGoToRoute),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Finish Recipe Button\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start-button in-progress\",\n    disabled: true,\n    \"data-testid\": \"finish-recipe-btn\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Finish Recipe Button\"), goToRoute && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/receitas-feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }));\n}\n\nCockTailsControlsRecipeProgress.propTypes = {\n  valuesToRender: PropTypes.string.isRequired\n};\nexport default CockTailsControlsRecipeProgress;","map":{"version":3,"sources":["/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/helpersComponents/CockTailsControlsRecipeProgress.jsx"],"names":["React","useState","PropTypes","Redirect","doneRecipe","recipeInfo","setGoToRoute","idDrink","strDrink","strDrinkThumb","strAlcoholic","strCategory","mealInfo","id","type","area","category","alcoholicOrNot","name","image","doneDate","Date","tags","strTags","storage","JSON","parse","localStorage","getItem","newStorage","setItem","stringify","CockTailsControlsRecipeProgress","props","goToRoute","valuesToRender","inProgressDrink","data","checkLocalStorage","buttonEnabled","checked","map","element","i","meal","cocktails","drink","event","handleChecked","checkbox","mensure","strInstructions","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nfunction doneRecipe(recipeInfo, setGoToRoute) {\n  const {\n    idDrink, strDrink, strDrinkThumb, strAlcoholic, strCategory,\n  } = recipeInfo;\n  const mealInfo = {\n    id: idDrink,\n    type: 'comida',\n    area: '',\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strDrink,\n    image: strDrinkThumb,\n    doneDate: new Date(),\n    tags: strTags,\n  };\n  let storage = JSON.parse(localStorage.getItem('doneRecipes'));\n  if (!storage) {\n    storage = [];\n    const newStorage = [...storage, mealInfo];\n    localStorage.setItem('doneRecipes', JSON.stringify(newStorage));\n  } else {\n    const newStorage = [...storage, mealInfo];\n    localStorage.setItem('doneRecipes', JSON.stringify(newStorage));\n  }\n  setGoToRoute(true);\n}\n\nfunction CockTailsControlsRecipeProgress(props) {\n  const [goToRoute, setGoToRoute] = useState(false);\n  const { valuesToRender } = props;\n  const {\n    inProgressDrink, data, checkLocalStorage, buttonEnabled,\n    id, checked,\n  } = valuesToRender;\n  return (\n    <div>\n      <h1>{inProgressDrink.strDrink}</h1>\n      <h2 data-testid=\"recipe-category\">{inProgressDrink.strCategory}</h2>\n      <h3 data-testid=\"recipe-title\"> Ingredients </h3>\n      {data.map((element, i) => (\n        <div key={element.meal} data-testid={`${i}-ingredient-step`}>\n          <span>\n            <input id={i} type=\"checkbox\" checked={checkLocalStorage.cocktails[id][i].checked} name={element.drink} onClick={(event) => handleChecked(event, checked.checkbox[i].checked, 'cocktails', valuesToRender)} />\n            <span>{element.meal}</span>\n            {element.mensure}\n          </span>\n        </div>\n      ))}\n      <div className=\"instructions\" data-testid=\"instructions\">\n        <h3>Instruções</h3>\n        {inProgressDrink.strInstructions}\n      </div>\n      {buttonEnabled\n        ? (\n          <button className=\"start-button in-progress\" enable data-testid=\"finish-recipe-btn\" onClick={() => doneRecipe(inProgressDrink, setGoToRoute)} type=\"button\">\n            Finish Recipe Button\n          </button>\n        )\n        : (\n          <button\n            className=\"start-button in-progress\"\n            disabled\n            data-testid=\"finish-recipe-btn\"\n            type=\"button\"\n          >\n            Finish Recipe Button\n          </button>\n        )}\n      {goToRoute && <Redirect to=\"/receitas-feitas\" />}\n    </div>\n  );\n}\nCockTailsControlsRecipeProgress.propTypes = {\n  valuesToRender: PropTypes.string.isRequired,\n};\n\nexport default CockTailsControlsRecipeProgress;\n"]},"metadata":{},"sourceType":"module"}