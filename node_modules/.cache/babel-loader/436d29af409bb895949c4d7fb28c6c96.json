{"ast":null,"code":"var _jsxFileName = \"/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/helpersComponents/MealsControlsRecipeProgress.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nexport function handleChecked(event, value, type, values) {\n  const {\n    checked,\n    setCountChecked,\n    countChecked,\n    checkLocalStorage,\n    setChecked,\n    id\n  } = values;\n  checked.checkbox.forEach((checkbox, i) => {\n    if (event.target.checked === true) {\n      setCountChecked(countChecked + 1);\n    }\n\n    if (event.target.checked === false) {\n      if (checkLocalStorage.countChecked < 0) {\n        setCountChecked(countChecked + 1);\n      } else {\n        setCountChecked(countChecked - 1);\n      }\n    }\n\n    if (checkbox.id === Number(event.target.id)) {\n      checked.checkbox[i].checked = event.target.checked;\n    }\n  });\n  setChecked(prevState => ({ ...prevState,\n    checked: { ...prevState.checkbox.checked,\n      checkbox: value\n    }\n  }));\n  const newStorage = { ...checkLocalStorage,\n    meals: { ...checkLocalStorage.meals,\n      [id]: {\n        id: checked.checkbox,\n        name: '',\n        checked\n      }\n    }\n  };\n  localStorage.setItem('inProgressRecipes', JSON.stringify(newStorage));\n}\n\nfunction doneRecipe(recipeInfo, setGoToRoute) {\n  const {\n    idMeal,\n    strArea,\n    strCategory,\n    strMeal,\n    strMealThumb,\n    strTags\n  } = recipeInfo;\n  const mealInfo = {\n    id: idMeal,\n    type: 'comida',\n    area: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb,\n    doneDate: new Date(),\n    tags: strTags === null ? [] : strTags.split(',')\n  };\n  let storage = JSON.parse(localStorage.getItem('doneRecipes'));\n\n  if (!storage) {\n    storage = [];\n    const newStorage = [...storage, mealInfo];\n    localStorage.setItem('doneRecipes', JSON.stringify(newStorage));\n  } else {\n    const newStorage = [...storage, mealInfo];\n    localStorage.setItem('doneRecipes', JSON.stringify(newStorage));\n  }\n\n  setGoToRoute(true);\n}\n\nfunction MealsControlsRecipeProgress(props) {\n  const [goToRoute, setGoToRoute] = useState(false);\n  const {\n    valuesToRender\n  } = props;\n  const {\n    inProgressRecipe,\n    data,\n    checkLocalStorage,\n    buttonEnabled,\n    id,\n    checked\n  } = valuesToRender;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, inProgressRecipe.strMeal), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, inProgressRecipe.strCategory), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \" Ingredients \"), data.map((element, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: element.meal,\n    \"data-testid\": `${i}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: i,\n    type: \"checkbox\",\n    checked: checkLocalStorage.meals[id][i].checked,\n    name: element.meal,\n    onClick: event => handleChecked(event, checked.checkbox[i].checked, 'meals', valuesToRender),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, element.meal), element.mensure))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"instructions\",\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Instru\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, inProgressRecipe.strInstructions)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, buttonEnabled ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start-button in-progress\",\n    enable: true,\n    \"data-testid\": \"finish-recipe-btn\",\n    onClick: () => doneRecipe(inProgressRecipe, setGoToRoute),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Finish Recipe Button\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start-button in-progress\",\n    disabled: true,\n    \"data-testid\": \"finish-recipe-btn\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Finish Recipe Button\")), goToRoute && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/receitas-feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }));\n}\n\nexport default MealsControlsRecipeProgress;\nMealsControlsRecipeProgress.propTypes = {\n  valuesToRender: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/helpersComponents/MealsControlsRecipeProgress.jsx"],"names":["React","useState","PropTypes","Redirect","handleChecked","event","value","type","values","checked","setCountChecked","countChecked","checkLocalStorage","setChecked","id","checkbox","forEach","i","target","Number","prevState","newStorage","meals","name","localStorage","setItem","JSON","stringify","doneRecipe","recipeInfo","setGoToRoute","idMeal","strArea","strCategory","strMeal","strMealThumb","strTags","mealInfo","area","category","alcoholicOrNot","image","doneDate","Date","tags","split","storage","parse","getItem","MealsControlsRecipeProgress","props","goToRoute","valuesToRender","inProgressRecipe","data","buttonEnabled","map","element","meal","mensure","strInstructions","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqCC,IAArC,EAA2CC,MAA3C,EAAmD;AACxD,QAAM;AACJC,IAAAA,OADI;AACKC,IAAAA,eADL;AACsBC,IAAAA,YADtB;AACoCC,IAAAA,iBADpC;AACuDC,IAAAA,UADvD;AACmEC,IAAAA;AADnE,MAEFN,MAFJ;AAGAC,EAAAA,OAAO,CAACM,QAAR,CAAiBC,OAAjB,CAAyB,CAACD,QAAD,EAAWE,CAAX,KAAiB;AACxC,QAAIZ,KAAK,CAACa,MAAN,CAAaT,OAAb,KAAyB,IAA7B,EAAmC;AACjCC,MAAAA,eAAe,CAACC,YAAY,GAAG,CAAhB,CAAf;AACD;;AAAC,QAAIN,KAAK,CAACa,MAAN,CAAaT,OAAb,KAAyB,KAA7B,EAAoC;AACpC,UAAIG,iBAAiB,CAACD,YAAlB,GAAiC,CAArC,EAAwC;AACtCD,QAAAA,eAAe,CAACC,YAAY,GAAG,CAAhB,CAAf;AACD,OAFD,MAEO;AACLD,QAAAA,eAAe,CAACC,YAAY,GAAG,CAAhB,CAAf;AACD;AACF;;AACD,QAAII,QAAQ,CAACD,EAAT,KAAgBK,MAAM,CAACd,KAAK,CAACa,MAAN,CAAaJ,EAAd,CAA1B,EAA6C;AAC3CL,MAAAA,OAAO,CAACM,QAAR,CAAiBE,CAAjB,EAAoBR,OAApB,GAA8BJ,KAAK,CAACa,MAAN,CAAaT,OAA3C;AACD;AACF,GAbD;AAcAI,EAAAA,UAAU,CAAEO,SAAD,KAAgB,EACzB,GAAGA,SADsB;AAEzBX,IAAAA,OAAO,EAAE,EACP,GAAGW,SAAS,CAACL,QAAV,CAAmBN,OADf;AAEPM,MAAAA,QAAQ,EAAET;AAFH;AAFgB,GAAhB,CAAD,CAAV;AAOA,QAAMe,UAAU,GAAG,EAAE,GAAGT,iBAAL;AAAwBU,IAAAA,KAAK,EAAE,EAAE,GAAGV,iBAAiB,CAACU,KAAvB;AAA8B,OAACR,EAAD,GAAM;AAAEA,QAAAA,EAAE,EAAEL,OAAO,CAACM,QAAd;AAAwBQ,QAAAA,IAAI,EAAE,EAA9B;AAAkCd,QAAAA;AAAlC;AAApC;AAA/B,GAAnB;AACAe,EAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0CC,IAAI,CAACC,SAAL,CAAeN,UAAf,CAA1C;AACD;;AAED,SAASO,UAAT,CAAoBC,UAApB,EAAgCC,YAAhC,EAA8C;AAC5C,QAAM;AACJC,IAAAA,MADI;AACIC,IAAAA,OADJ;AACaC,IAAAA,WADb;AAC0BC,IAAAA,OAD1B;AACmCC,IAAAA,YADnC;AACiDC,IAAAA;AADjD,MAEFP,UAFJ;AAGA,QAAMQ,QAAQ,GAAG;AACfvB,IAAAA,EAAE,EAAEiB,MADW;AAEfxB,IAAAA,IAAI,EAAE,QAFS;AAGf+B,IAAAA,IAAI,EAAEN,OAHS;AAIfO,IAAAA,QAAQ,EAAEN,WAJK;AAKfO,IAAAA,cAAc,EAAE,EALD;AAMfjB,IAAAA,IAAI,EAAEW,OANS;AAOfO,IAAAA,KAAK,EAAEN,YAPQ;AAQfO,IAAAA,QAAQ,EAAE,IAAIC,IAAJ,EARK;AASfC,IAAAA,IAAI,EAAER,OAAO,KAAK,IAAZ,GAAmB,EAAnB,GAAwBA,OAAO,CAACS,KAAR,CAAc,GAAd;AATf,GAAjB;AAWA,MAAIC,OAAO,GAAGpB,IAAI,CAACqB,KAAL,CAAWvB,YAAY,CAACwB,OAAb,CAAqB,aAArB,CAAX,CAAd;;AACA,MAAI,CAACF,OAAL,EAAc;AACZA,IAAAA,OAAO,GAAG,EAAV;AACA,UAAMzB,UAAU,GAAG,CAAC,GAAGyB,OAAJ,EAAaT,QAAb,CAAnB;AACAb,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeN,UAAf,CAApC;AACD,GAJD,MAIO;AACL,UAAMA,UAAU,GAAG,CAAC,GAAGyB,OAAJ,EAAaT,QAAb,CAAnB;AACAb,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeN,UAAf,CAApC;AACD;;AACDS,EAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,SAASmB,2BAAT,CAAqCC,KAArC,EAA4C;AAC1C,QAAM,CAACC,SAAD,EAAYrB,YAAZ,IAA4B7B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEmD,IAAAA;AAAF,MAAqBF,KAA3B;AACA,QAAM;AACJG,IAAAA,gBADI;AACcC,IAAAA,IADd;AACoB1C,IAAAA,iBADpB;AACuC2C,IAAAA,aADvC;AAEJzC,IAAAA,EAFI;AAEAL,IAAAA;AAFA,MAGF2C,cAHJ;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCC,gBAAgB,CAACnB,OAApD,CADF,eAEE;AAAI,mBAAY,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCmB,gBAAgB,CAACpB,WAApD,CAFF,eAGE;AAAI,mBAAY,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,EAIGqB,IAAI,CAACE,GAAL,CAAS,CAACC,OAAD,EAAUxC,CAAV,kBACR;AAAK,IAAA,GAAG,EAAEwC,OAAO,CAACC,IAAlB;AAAwB,mBAAc,GAAEzC,CAAE,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAO,IAAA,EAAE,EAAEA,CAAX;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,OAAO,EAAEL,iBAAiB,CAACU,KAAlB,CAAwBR,EAAxB,EAA4BG,CAA5B,EAA+BR,OAAtE;AAA+E,IAAA,IAAI,EAAEgD,OAAO,CAACC,IAA7F;AAAmG,IAAA,OAAO,EAAGrD,KAAD,IAAWD,aAAa,CAACC,KAAD,EAAQI,OAAO,CAACM,QAAR,CAAiBE,CAAjB,EAAoBR,OAA5B,EAAqC,OAArC,EAA8C2C,cAA9C,CAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOK,OAAO,CAACC,IAAf,CAHF,EAIGD,OAAO,CAACE,OAJX,CADF,CADD,CAJH,eAcE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,mBAAY,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,gBAAgB,CAACO,eAArB,CAFF,CAdF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,aAAa,gBAEV;AAAQ,IAAA,SAAS,EAAC,0BAAlB;AAA6C,IAAA,MAAM,MAAnD;AAAoD,mBAAY,mBAAhE;AAAoF,IAAA,OAAO,EAAE,MAAM3B,UAAU,CAACyB,gBAAD,EAAmBvB,YAAnB,CAA7G;AAA+I,IAAA,IAAI,EAAC,QAApJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFU,gBAOV;AACE,IAAA,SAAS,EAAC,0BADZ;AAEE,IAAA,QAAQ,MAFV;AAGE,mBAAY,mBAHd;AAIE,IAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARN,CAlBF,EAoCGqB,SAAS,iBAAI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApChB,CADF;AAwCD;;AAED,eAAeF,2BAAf;AAEAA,2BAA2B,CAACY,SAA5B,GAAwC;AACtCT,EAAAA,cAAc,EAAElD,SAAS,CAAC4D,MAAV,CAAiBC;AADK,CAAxC","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nexport function handleChecked(event, value, type, values) {\n  const {\n    checked, setCountChecked, countChecked, checkLocalStorage, setChecked, id,\n  } = values;\n  checked.checkbox.forEach((checkbox, i) => {\n    if (event.target.checked === true) {\n      setCountChecked(countChecked + 1);\n    } if (event.target.checked === false) {\n      if (checkLocalStorage.countChecked < 0) {\n        setCountChecked(countChecked + 1);\n      } else {\n        setCountChecked(countChecked - 1);\n      }\n    }\n    if (checkbox.id === Number(event.target.id)) {\n      checked.checkbox[i].checked = event.target.checked;\n    }\n  });\n  setChecked((prevState) => ({\n    ...prevState,\n    checked: {\n      ...prevState.checkbox.checked,\n      checkbox: value,\n    },\n  }));\n  const newStorage = { ...checkLocalStorage, meals: { ...checkLocalStorage.meals, [id]: { id: checked.checkbox, name: '', checked } } };\n  localStorage.setItem('inProgressRecipes', JSON.stringify(newStorage));\n}\n\nfunction doneRecipe(recipeInfo, setGoToRoute) {\n  const {\n    idMeal, strArea, strCategory, strMeal, strMealThumb, strTags,\n  } = recipeInfo;\n  const mealInfo = {\n    id: idMeal,\n    type: 'comida',\n    area: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb,\n    doneDate: new Date(),\n    tags: strTags === null ? [] : strTags.split(','),\n  };\n  let storage = JSON.parse(localStorage.getItem('doneRecipes'));\n  if (!storage) {\n    storage = [];\n    const newStorage = [...storage, mealInfo];\n    localStorage.setItem('doneRecipes', JSON.stringify(newStorage));\n  } else {\n    const newStorage = [...storage, mealInfo];\n    localStorage.setItem('doneRecipes', JSON.stringify(newStorage));\n  }\n  setGoToRoute(true);\n}\n\nfunction MealsControlsRecipeProgress(props) {\n  const [goToRoute, setGoToRoute] = useState(false);\n  const { valuesToRender } = props;\n  const {\n    inProgressRecipe, data, checkLocalStorage, buttonEnabled,\n    id, checked,\n  } = valuesToRender;\n  return (\n    <div>\n      <h1 data-testid=\"recipe-category\">{inProgressRecipe.strMeal}</h1>\n      <h2 data-testid=\"recipe-category\">{inProgressRecipe.strCategory}</h2>\n      <h3 data-testid=\"recipe-title\"> Ingredients </h3>\n      {data.map((element, i) => (\n        <div key={element.meal} data-testid={`${i}-ingredient-step`}>\n          <span>\n            {/* {console.log(checkLocalStorage.meals[id][i])} */}\n            <input id={i} type=\"checkbox\" checked={checkLocalStorage.meals[id][i].checked} name={element.meal} onClick={(event) => handleChecked(event, checked.checkbox[i].checked, 'meals', valuesToRender)} />\n            <span>{element.meal}</span>\n            {element.mensure}\n          </span>\n        </div>\n      ))}\n      <div className=\"instructions\" data-testid=\"instructions\">\n        <h3>Instruções</h3>\n        <p>{inProgressRecipe.strInstructions}</p>\n      </div>\n      <div>\n        {buttonEnabled\n          ? (\n            <button className=\"start-button in-progress\" enable data-testid=\"finish-recipe-btn\" onClick={() => doneRecipe(inProgressRecipe, setGoToRoute)} type=\"button\">\n              Finish Recipe Button\n            </button>\n          )\n          : (\n            <button\n              className=\"start-button in-progress\"\n              disabled\n              data-testid=\"finish-recipe-btn\"\n              type=\"button\"\n            >\n              Finish Recipe Button\n            </button>\n          )}\n      </div>\n      {goToRoute && <Redirect to=\"/receitas-feitas\" />}\n    </div>\n  );\n}\n\nexport default MealsControlsRecipeProgress;\n\nMealsControlsRecipeProgress.propTypes = {\n  valuesToRender: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}