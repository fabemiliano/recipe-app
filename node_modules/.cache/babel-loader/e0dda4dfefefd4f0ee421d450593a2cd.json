{"ast":null,"code":"var _jsxFileName = \"/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/DoneRecipes.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\nimport profileIcon from \"../images/profileIcon.svg\";\nimport shareIcon from \"../images/shareIcon.svg\";\nimport '../components/CSS/DoneRecipes.css';\n\nfunction header() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-recipes-done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: profileIcon,\n    alt: \"ProfileIcon\",\n    \"data-testeid\": \"profile-top-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Receitas Feitas\"));\n}\n\nconst buttons = (setRecipes, state) => {\n  const food = state.filter(e => e.type === 'comida');\n  const drinck = state.filter(e => e.type === 'bebida');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"buttons-filter\",\n    \"data-testid\": \"filter-by-all-btn\",\n    onClick: () => setRecipes(state),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"buttons-filter\",\n    \"data-testid\": \"filter-by-food-btn\",\n    onClick: () => setRecipes(food),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Food\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"buttons-filter\",\n    \"data-testid\": \"filter-by-drink-btn\",\n    onClick: () => setRecipes(drinck),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Drinks\"));\n};\n\nfunction renderRecipes(recipes) {\n  console.log(recipes);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, recipes.map(({\n    image,\n    id,\n    name,\n    category,\n    type\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recipes-done\",\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `${type}s/${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": `${id}-horizontal-image`,\n      src: image,\n      alt: \"Imagem da Receita Finalizada\",\n      width: \"150px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${id}-horizontal-top-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, category), /*#__PURE__*/React.createElement(Link, {\n      to: `${type}s/${id}`,\n      \"data-testid\": `${id}-horizontal-name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${id}-horizontal-done-date`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, id), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${id}-${name}-horizontal-tag`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, category), /*#__PURE__*/React.createElement(CopyToClipboard, {\n      text: window.location.href,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"share\",\n      type: \"button\",\n      \"data-testid\": \"filter-by-drink-btn\",\n      onClick: () => alert('Link copiado!'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: shareIcon,\n      alt: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }))));\n  }));\n}\n\nfunction DoneRecipes() {\n  const [recipes, setRecipes] = useState(JSON.parse(localStorage.getItem('doneRecipes')));\n  const state = JSON.parse(localStorage.getItem('doneRecipes'));\n  useEffect(() => {\n    renderRecipes(recipes);\n  }, [recipes]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, header(), buttons(setRecipes, state), recipes && renderRecipes(recipes));\n}\n\nexport default DoneRecipes;","map":{"version":3,"sources":["/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/DoneRecipes.jsx"],"names":["React","useState","useEffect","CopyToClipboard","Link","header","profileIcon","buttons","setRecipes","state","food","filter","e","type","drinck","renderRecipes","recipes","console","log","map","image","id","name","category","window","location","href","alert","shareIcon","DoneRecipes","JSON","parse","localStorage","getItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\n\nimport profileIcon from '../images/profileIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\nimport '../components/CSS/DoneRecipes.css';\n\nfunction header() {\n  return (\n    <div className=\"header-recipes-done\">\n      <img\n        src={profileIcon}\n        alt=\"ProfileIcon\"\n        data-testeid=\"profile-top-btn\"\n      />\n      <p>Receitas Feitas</p>\n    </div>\n  );\n}\n\nconst buttons = (setRecipes, state) => {\n  const food = state.filter((e) => e.type === 'comida');\n  const drinck = state.filter((e) => e.type === 'bebida');\n  return (\n    <div className=\"test\">\n      <button\n        type=\"button\"\n        className=\"buttons-filter\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={() => setRecipes(state)}\n      >\n        All\n      </button>\n      <button\n        type=\"button\"\n        className=\"buttons-filter\"\n        data-testid=\"filter-by-food-btn\"\n        onClick={() => setRecipes(food)}\n      >\n        Food\n      </button>\n      <button\n        type=\"button\"\n        className=\"buttons-filter\"\n        data-testid=\"filter-by-drink-btn\"\n        onClick={() => setRecipes(drinck)}\n      >\n        Drinks\n      </button>\n    </div>\n  );\n};\n\nfunction renderRecipes(recipes) {\n  console.log(recipes);\n  return (\n    <div>\n      {recipes.map(({\n        image,\n        id,\n        name,\n        category,\n        type,\n      }) => {\n        return (\n          <div className=\"recipes-done\" key={id}>\n            <Link to={`${type}s/${id}`}>\n              <img\n                data-testid={`${id}-horizontal-image`}\n                src={image}\n                alt=\"Imagem da Receita Finalizada\"\n                width=\"150px\"\n              />\n            </Link>\n            <p data-testid={`${id}-horizontal-top-text`}>{category}</p>\n            <Link to={`${type}s/${id}`} data-testid={`${id}-horizontal-name`}>{name}</Link>\n            <p data-testid={`${id}-horizontal-done-date`}>{id}</p>\n            <p data-testid={`${id}-${name}-horizontal-tag`}>{category}</p>\n            <CopyToClipboard text={window.location.href}>\n              <button\n                className=\"share\"\n                type=\"button\"\n                data-testid=\"filter-by-drink-btn\"\n                onClick={() => alert('Link copiado!')}\n              >\n                <img src={shareIcon} alt=\"icon\" />\n              </button>\n            </CopyToClipboard>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction DoneRecipes() {\n  const [recipes, setRecipes] = useState(JSON.parse(localStorage.getItem('doneRecipes')));\n  const state = JSON.parse(localStorage.getItem('doneRecipes'));\n  useEffect(() => {\n    renderRecipes(recipes);\n  }, [recipes]);\n  return (\n    <div className=\"container\">\n      {header()}\n      {buttons(setRecipes, state)}\n      {recipes && renderRecipes(recipes)}\n    </div>\n  );\n}\n\nexport default DoneRecipes;\n"]},"metadata":{},"sourceType":"module"}