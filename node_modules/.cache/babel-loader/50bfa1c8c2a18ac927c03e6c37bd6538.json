{"ast":null,"code":"var _jsxFileName = \"/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/DoneRecipes.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport profileIcon from \"../images/profileIcon.svg\";\nimport shareIcon from \"../images/shareIcon.svg\";\nimport './CSS/DoneRecipes.css';\n\nconst header = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"header-recipes-done\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: profileIcon,\n  alt: \"ProfileIcon\",\n  \"data-testeid\": \"profile-top-btn\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, \"Receitas Feitas\"));\n\nconst buttons = (setRecipes, state) => {\n  const food = state.filter(e => e.type === 'comida');\n  const drinck = state.filter(e => e.type === 'bebida');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"buttons-filter\",\n    \"data-testid\": \"filter-by-all-btn\",\n    onClick: () => setRecipes(state),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"buttons-filter\",\n    \"data-testid\": \"filter-by-food-btn\",\n    onClick: () => setRecipes(food),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Food\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"buttons-filter\",\n    \"data-testid\": \"filter-by-drink-btn\",\n    onClick: () => setRecipes(drinck),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Drinks\"));\n};\n\nconst clipboard = (type, id, setClp) => {\n  navigator.clipboard.writeText(`http://localhost:3000/${type}s/${id}`).then(() => {\n    setClp(false);\n    setTimeout(() => {\n      setClp(true);\n    }, 2000);\n  });\n};\n\nconst renderRecipes = (recipes, setClp) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 1\n  }\n});\n\nconst DoneRecipes = () => {\n  const [recipes, setRecipes] = useState(JSON.parse(localStorage.getItem('doneRecipes')));\n  const state = JSON.parse(localStorage.getItem('doneRecipes'));\n  const [clp, setClp] = useState(true);\n  useEffect(() => {\n    renderRecipes(recipes);\n  }, [recipes]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, state && header(), state && buttons(setRecipes, state), recipes && renderRecipes(recipes, setClp), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"alert\",\n    hidden: clp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Link copiado!\"));\n};\n\nexport default DoneRecipes;","map":{"version":3,"sources":["/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/DoneRecipes.jsx"],"names":["React","useState","useEffect","Link","header","profileIcon","buttons","setRecipes","state","food","filter","e","type","drinck","clipboard","id","setClp","navigator","writeText","then","setTimeout","renderRecipes","recipes","DoneRecipes","JSON","parse","localStorage","getItem","clp"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport profileIcon from '../images/profileIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\nimport './CSS/DoneRecipes.css';\n\nconst header = () => (\n  <div className=\"header-recipes-done\">\n    <img\n      src={profileIcon}\n      alt=\"ProfileIcon\"\n      data-testeid=\"profile-top-btn\"\n    />\n    <p>Receitas Feitas</p>\n  </div>\n);\n\nconst buttons = (setRecipes, state) => {\n  const food = state.filter((e) => e.type === 'comida');\n  const drinck = state.filter((e) => e.type === 'bebida');\n  return (\n    <div className=\"test\">\n      <button\n        type=\"button\"\n        className=\"buttons-filter\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={() => setRecipes(state)}\n      >\n        All\n      </button>\n      <button\n        type=\"button\"\n        className=\"buttons-filter\"\n        data-testid=\"filter-by-food-btn\"\n        onClick={() => setRecipes(food)}\n      >\n        Food\n      </button>\n      <button\n        type=\"button\"\n        className=\"buttons-filter\"\n        data-testid=\"filter-by-drink-btn\"\n        onClick={() => setRecipes(drinck)}\n      >\n        Drinks\n      </button>\n    </div>\n  );\n};\n\nconst clipboard = (type, id, setClp) => {\n  navigator.clipboard.writeText(`http://localhost:3000/${type}s/${id}`)\n    .then(() => {\n      setClp(false);\n      setTimeout(() => {\n        setClp(true);\n      }, 2000);\n    });\n};\n\nconst renderRecipes = (recipes, setClp) => (\n<div></div>\n);\n\nconst DoneRecipes = () => {\n  const [recipes, setRecipes] = useState(JSON.parse(localStorage.getItem('doneRecipes')));\n  const state = JSON.parse(localStorage.getItem('doneRecipes'));\n  const [clp, setClp] = useState(true);\n\n  useEffect(() => {\n    renderRecipes(recipes);\n  }, [recipes]);\n\n  return (\n    <div className=\"container\">\n      {state && header()}\n      {state && buttons(setRecipes, state)}\n      {recipes && renderRecipes(recipes, setClp)}\n      <p className=\"alert\" hidden={clp}>Link copiado!</p>\n    </div>\n  );\n};\n\nexport default DoneRecipes;\n"]},"metadata":{},"sourceType":"module"}