{"ast":null,"code":"var _jsxFileName = \"/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/DoneRecipes.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from './Header';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport { getColors } from './FavoriteRecipes';\nimport './CSS/DoneRecipes.css';\nimport meal from \"../images/meal.svg\";\nimport drink from \"../images/drink.svg\";\nimport filter from \"../images/filter.svg\";\n\nconst buttons = (setRecipes, state) => {\n  const food = state.filter(e => e.type === 'comida');\n  const drinck = state.filter(e => e.type === 'bebida');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-filter-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button-main-screen\",\n    \"data-testid\": \"filter-by-all-btn\",\n    onClick: () => setRecipes(state),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: filter,\n    width: \"20px\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button-main-screen\",\n    \"data-testid\": \"filter-by-food-btn\",\n    onClick: () => setRecipes(food),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: meal,\n    width: \"20px\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), \"Food\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button-main-screen\",\n    \"data-testid\": \"filter-by-drink-btn\",\n    onClick: () => setRecipes(drinck),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Drinks\"));\n};\n\nconst clipboard = (type, id, setClp) => {\n  navigator.clipboard.writeText(`http://localhost:3000/${type}s/${id}`).then(() => {\n    setClp(false);\n    setTimeout(() => {\n      setClp(true);\n    }, 2000);\n  });\n};\n\nconst renderRecipes = (recipes, setClp) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"favorite-recipes-container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }\n}, recipes.map(({\n  id,\n  type,\n  category,\n  alcoholicOrNot,\n  name,\n  image,\n  area,\n  doneDate,\n  tags\n}, idxMap) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"done-recipes-card\",\n  key: name,\n  style: {\n    backgroundColor: getColors()\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Link, {\n  to: `${type}s/${id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  \"data-testid\": `${idxMap}-horizontal-image`,\n  src: image,\n  alt: \"Imagem da Receita Finalizada\",\n  width: \"150px\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 11\n  }\n})), /*#__PURE__*/React.createElement(\"p\", {\n  \"data-testid\": `${idxMap}-horizontal-top-text`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }\n}, `${area} - ${category}`), type === 'bebida' ? /*#__PURE__*/React.createElement(\"p\", {\n  \"data-testid\": `${idxMap}-horizontal-top-text`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 13\n  }\n}, alcoholicOrNot) : null, /*#__PURE__*/React.createElement(Link, {\n  to: `${type}s/${id}`,\n  \"data-testid\": `${idxMap}-horizontal-name`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }\n}, name), /*#__PURE__*/React.createElement(\"p\", {\n  \"data-testid\": `${idxMap}-horizontal-done-date`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }\n}, doneDate), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"tags\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }\n}, tags.map(tag => /*#__PURE__*/React.createElement(\"p\", {\n  key: tag,\n  \"data-testid\": `${idxMap}-${tag}-horizontal-tag`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 13\n  }\n}, `${tag}`))), /*#__PURE__*/React.createElement(\"button\", {\n  className: \"share\",\n  type: \"button\",\n  \"data-testid\": `${idxMap}-horizontal-share-btn`,\n  onClick: () => clipboard(type, id, setClp),\n  src: shareIcon,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: shareIcon,\n  alt: \"icon\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 11\n  }\n})))));\n\nconst DoneRecipes = () => {\n  const [recipes, setRecipes] = useState(JSON.parse(localStorage.getItem('doneRecipes')));\n  const state = JSON.parse(localStorage.getItem('doneRecipes'));\n  const [clp, setClp] = useState(true);\n  useEffect(() => {\n    renderRecipes(recipes);\n  }, [recipes]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    screen: \"Receitas Feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), state && buttons(setRecipes, state), recipes && renderRecipes(recipes, setClp), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"alert\",\n    hidden: clp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"Link copiado!\"));\n};\n\nexport default DoneRecipes;","map":{"version":3,"sources":["/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/DoneRecipes.jsx"],"names":["React","useState","useEffect","Link","Header","getColors","buttons","setRecipes","state","food","filter","e","type","drinck","meal","clipboard","id","setClp","navigator","writeText","then","setTimeout","renderRecipes","recipes","map","category","alcoholicOrNot","name","image","area","doneDate","tags","idxMap","backgroundColor","tag","shareIcon","DoneRecipes","JSON","parse","localStorage","getItem","clp"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from './Header';\nimport shareIcon from '../images/shareIcon.svg';\nimport { getColors } from './FavoriteRecipes';\nimport './CSS/DoneRecipes.css';\nimport meal from '../images/meal.svg';\nimport drink from '../images/drink.svg';\nimport filter from '../images/filter.svg';\n\nconst buttons = (setRecipes, state) => {\n  const food = state.filter((e) => e.type === 'comida');\n  const drinck = state.filter((e) => e.type === 'bebida');\n  return (\n    <div className=\"favorite-filter-buttons\">\n      <button\n        type=\"button\"\n        className=\"button-main-screen\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={() => setRecipes(state)}\n      >\n        <img src={filter} width=\"20px\" alt=\"\" />\n        All\n      </button>\n      <button\n        type=\"button\"\n        className=\"button-main-screen\"\n        data-testid=\"filter-by-food-btn\"\n        onClick={() => setRecipes(food)}\n      >\n        <img src={meal} width=\"20px\" alt=\"\" />\n        Food\n      </button>\n      <button\n        type=\"button\"\n        className=\"button-main-screen\"\n        data-testid=\"filter-by-drink-btn\"\n        onClick={() => setRecipes(drinck)}\n      >\n        Drinks\n      </button>\n    </div>\n  );\n};\n\nconst clipboard = (type, id, setClp) => {\n  navigator.clipboard.writeText(`http://localhost:3000/${type}s/${id}`)\n    .then(() => {\n      setClp(false);\n      setTimeout(() => {\n        setClp(true);\n      }, 2000);\n    });\n};\n\nconst renderRecipes = (recipes, setClp) => (\n  <div className=\"favorite-recipes-container\">\n    {recipes.map(({\n      id,\n      type,\n      category,\n      alcoholicOrNot,\n      name,\n      image,\n      area,\n      doneDate,\n      tags,\n    }, idxMap) => (\n      <div className=\"done-recipes-card\" key={name} style={{ backgroundColor: getColors() }}>\n        <Link to={`${type}s/${id}`}>\n          <img\n            data-testid={`${idxMap}-horizontal-image`}\n            src={image}\n            alt=\"Imagem da Receita Finalizada\"\n            width=\"150px\"\n          />\n        </Link>\n        <p data-testid={`${idxMap}-horizontal-top-text`}>{`${area} - ${category}`}</p>\n        {type === 'bebida'\n          ? <p data-testid={`${idxMap}-horizontal-top-text`}>{alcoholicOrNot}</p>\n          : null}\n        <Link to={`${type}s/${id}`} data-testid={`${idxMap}-horizontal-name`}>{name}</Link>\n        <p data-testid={`${idxMap}-horizontal-done-date`}>{doneDate}</p>\n        <div className=\"tags\">\n          {tags.map((tag) => (\n            <p key={tag} data-testid={`${idxMap}-${tag}-horizontal-tag`}>{`${tag}`}</p>\n          ))}\n        </div>\n        <button\n          className=\"share\"\n          type=\"button\"\n          data-testid={`${idxMap}-horizontal-share-btn`}\n          onClick={() => clipboard(type, id, setClp)}\n          src={shareIcon}\n        >\n          <img src={shareIcon} alt=\"icon\" />\n        </button>\n      </div>\n    ))}\n  </div>\n);\n\nconst DoneRecipes = () => {\n  const [recipes, setRecipes] = useState(JSON.parse(localStorage.getItem('doneRecipes')));\n  const state = JSON.parse(localStorage.getItem('doneRecipes'));\n  const [clp, setClp] = useState(true);\n\n  useEffect(() => {\n    renderRecipes(recipes);\n  }, [recipes]);\n\n  return (\n    <div className=\"container\">\n      <Header screen=\"Receitas Feitas\" />\n      {state && buttons(setRecipes, state)}\n      {recipes && renderRecipes(recipes, setClp)}\n      <p className=\"alert\" hidden={clp}>Link copiado!</p>\n    </div>\n  );\n};\n\nexport default DoneRecipes;\n"]},"metadata":{},"sourceType":"module"}