{"ast":null,"code":"var _jsxFileName = \"/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/helpersComponents/CockTailsControlsRecipeProgress.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nexport function getDate() {\n  let today = new Date();\n  const dd = String(today.getDate()).padStart(2, '0');\n  const mm = String(today.getMonth() + 1).padStart(2, '0');\n  const yyyy = today.getFullYear();\n  today = `${mm}/${dd}/${yyyy}`;\n  return today;\n}\nexport function handleChecked(event, value, type, values) {\n  const {\n    checked,\n    setCountChecked,\n    countChecked,\n    checkLocalStorage,\n    setChecked,\n    id\n  } = values;\n  checked.checkbox.forEach((checkbox, i) => {\n    if (event.target.checked === true) {\n      setCountChecked(countChecked + 1);\n    }\n\n    if (event.target.checked === false) {\n      if (checkLocalStorage.countChecked < 0) {\n        setCountChecked(countChecked + 1);\n      } else {\n        setCountChecked(countChecked - 1);\n      }\n    }\n\n    if (checkbox.id === Number(event.target.id)) {\n      checked.checkbox[i].checked = event.target.checked;\n    }\n  });\n  setChecked(prevState => ({ ...prevState,\n    checked: { ...prevState.checkbox.checked,\n      checkbox: value\n    }\n  }));\n  const newStorage = { ...checkLocalStorage,\n    cocktails: { ...checkLocalStorage.cocktails,\n      [id]: [...checked.checkbox]\n    }\n  };\n  localStorage.setItem('inProgressRecipes', JSON.stringify(newStorage));\n}\n\nfunction doneRecipe(recipeInfo, setGoToRoute) {\n  const {\n    idDrink,\n    strDrink,\n    strDrinkThumb,\n    strAlcoholic,\n    strCategory,\n    strTags\n  } = recipeInfo;\n  const drinkInfo = {\n    id: idDrink,\n    type: 'comida',\n    area: '',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n    doneDate: getDate(),\n    tags: strTags === null ? [] : strTags.split(',')\n  };\n  let storage = JSON.parse(localStorage.getItem('doneRecipes'));\n\n  if (!storage) {\n    storage = [];\n    const newStorage = [...storage, drinkInfo];\n    localStorage.setItem('doneRecipes', JSON.stringify(newStorage));\n  } else {\n    const newStorage = [...storage, drinkInfo];\n    localStorage.setItem('doneRecipes', JSON.stringify(newStorage));\n  }\n\n  setGoToRoute(true);\n}\n\nconst renderButton = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  className: \"start-button in-progress\",\n  disabled: true,\n  \"data-testid\": \"finish-recipe-btn\",\n  type: \"button\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }\n}, \"Finish Recipe Button\"));\n\nfunction CockTailsControlsRecipeProgress(props) {\n  const [goToRoute, setGoToRoute] = useState(false);\n  const {\n    valuesToRender\n  } = props;\n  const {\n    inProgressDrink,\n    data,\n    checkLocalStorage,\n    buttonEnabled,\n    id,\n    checked\n  } = valuesToRender;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, inProgressDrink.strDrink), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, inProgressDrink.strCategory), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \" Ingredients \"), data.map((element, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: element.meal,\n    \"data-testid\": `${i}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: i,\n    type: \"checkbox\",\n    checked: checkLocalStorage.cocktails[id][i].checked,\n    name: element.drink,\n    onClick: event => handleChecked(event, checked.checkbox[i].checked, 'cocktails', valuesToRender),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, element.meal), element.mensure))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"instructions\",\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Instru\\xE7\\xF5es\"), inProgressDrink.strInstructions), buttonEnabled ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start-button in-progress\",\n    enable: true,\n    \"data-testid\": \"finish-recipe-btn\",\n    onClick: () => doneRecipe(inProgressDrink, setGoToRoute),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Finish Recipe Button\") : renderButton(), goToRoute && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/receitas-feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }));\n}\n\nCockTailsControlsRecipeProgress.propTypes = {\n  valuesToRender: PropTypes.string.isRequired\n};\nexport default CockTailsControlsRecipeProgress;","map":{"version":3,"sources":["/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/helpersComponents/CockTailsControlsRecipeProgress.jsx"],"names":["React","useState","PropTypes","Redirect","getDate","today","Date","dd","String","padStart","mm","getMonth","yyyy","getFullYear","handleChecked","event","value","type","values","checked","setCountChecked","countChecked","checkLocalStorage","setChecked","id","checkbox","forEach","i","target","Number","prevState","newStorage","cocktails","localStorage","setItem","JSON","stringify","doneRecipe","recipeInfo","setGoToRoute","idDrink","strDrink","strDrinkThumb","strAlcoholic","strCategory","strTags","drinkInfo","area","category","alcoholicOrNot","name","image","doneDate","tags","split","storage","parse","getItem","renderButton","CockTailsControlsRecipeProgress","props","goToRoute","valuesToRender","inProgressDrink","data","buttonEnabled","map","element","meal","drink","mensure","strInstructions","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nexport function getDate() {\n  let today = new Date();\n  const dd = String(today.getDate()).padStart(2, '0');\n  const mm = String(today.getMonth() + 1).padStart(2, '0');\n  const yyyy = today.getFullYear();\n  today = `${mm}/${dd}/${yyyy}`;\n  return today;\n}\n\nexport function handleChecked(event, value, type, values) {\n  const {\n    checked, setCountChecked, countChecked, checkLocalStorage, setChecked, id,\n  } = values;\n  checked.checkbox.forEach((checkbox, i) => {\n    if (event.target.checked === true) {\n      setCountChecked(countChecked + 1);\n    } if (event.target.checked === false) {\n      if (checkLocalStorage.countChecked < 0) {\n        setCountChecked(countChecked + 1);\n      } else {\n        setCountChecked(countChecked - 1);\n      }\n    }\n    if (checkbox.id === Number(event.target.id)) {\n      checked.checkbox[i].checked = event.target.checked;\n    }\n  });\n  setChecked((prevState) => ({\n    ...prevState,\n    checked: {\n      ...prevState.checkbox.checked,\n      checkbox: value,\n    },\n  }));\n  const newStorage = {\n    ...checkLocalStorage,\n    cocktails: { ...checkLocalStorage.cocktails, [id]: [...checked.checkbox] },\n  };\n  localStorage.setItem('inProgressRecipes', JSON.stringify(newStorage));\n}\n\nfunction doneRecipe(recipeInfo, setGoToRoute) {\n  const {\n    idDrink, strDrink, strDrinkThumb, strAlcoholic, strCategory, strTags,\n  } = recipeInfo;\n  const drinkInfo = {\n    id: idDrink,\n    type: 'comida',\n    area: '',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n    doneDate: getDate(),\n    tags: strTags === null ? [] : strTags.split(','),\n  };\n  let storage = JSON.parse(localStorage.getItem('doneRecipes'));\n  if (!storage) {\n    storage = [];\n    const newStorage = [...storage, drinkInfo];\n    localStorage.setItem('doneRecipes', JSON.stringify(newStorage));\n  } else {\n    const newStorage = [...storage, drinkInfo];\n    localStorage.setItem('doneRecipes', JSON.stringify(newStorage));\n  }\n  setGoToRoute(true);\n}\n\nconst renderButton = () => (\n  <div>\n    <button\n      className=\"start-button in-progress\"\n      disabled\n      data-testid=\"finish-recipe-btn\"\n      type=\"button\"\n    >\n      Finish Recipe Button\n    </button>\n  </div>\n);\n\nfunction CockTailsControlsRecipeProgress(props) {\n  const [goToRoute, setGoToRoute] = useState(false); const { valuesToRender } = props;\n  const {\n    inProgressDrink, data, checkLocalStorage, buttonEnabled,\n    id, checked,\n  } = valuesToRender;\n  return (\n    <div>\n      <h1>{inProgressDrink.strDrink}</h1>\n      <h2 data-testid=\"recipe-category\">{inProgressDrink.strCategory}</h2>\n      <h3 data-testid=\"recipe-title\"> Ingredients </h3>\n      {data.map((element, i) => (\n        <div key={element.meal} data-testid={`${i}-ingredient-step`}>\n          <span>\n            <input\n              id={i}\n              type=\"checkbox\"\n              checked={checkLocalStorage.cocktails[id][i].checked}\n              name={element.drink}\n              onClick={(event) => handleChecked(event, checked.checkbox[i].checked, 'cocktails', valuesToRender)}\n            />\n            <span>{element.meal}</span>\n            {element.mensure}\n          </span>\n        </div>\n      ))}\n      <div className=\"instructions\" data-testid=\"instructions\">\n        <h3>Instruções</h3>\n        {inProgressDrink.strInstructions}\n      </div>\n      {buttonEnabled\n        ? (\n          <button\n            className=\"start-button in-progress\"\n            enable\n            data-testid=\"finish-recipe-btn\"\n            onClick={() => doneRecipe(inProgressDrink, setGoToRoute)}\n            type=\"button\"\n          >\n            Finish Recipe Button\n          </button>\n        )\n        : renderButton()}\n      {goToRoute && <Redirect to=\"/receitas-feitas\" />}\n    </div>\n  );\n}\nCockTailsControlsRecipeProgress.propTypes = {\n  valuesToRender: PropTypes.string.isRequired,\n};\n\nexport default CockTailsControlsRecipeProgress;\n"]},"metadata":{},"sourceType":"module"}