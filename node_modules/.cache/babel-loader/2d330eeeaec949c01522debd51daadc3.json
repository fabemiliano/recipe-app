{"ast":null,"code":"var _jsxFileName = \"/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/FoodButtons.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport share from \"../images/shareIcon.svg\";\nimport notFavorite from \"../images/whiteHeartIcon.svg\";\nimport favorite from \"../images/blackHeartIcon.svg\";\nimport { ContextAplication } from '../context/ContextAplication';\nexport function copyToClipboard(setHide) {\n  navigator.clipboard.writeText(window.location.href);\n  setHide(false);\n  setTimeout(() => {\n    setHide(true);\n  }, 2000);\n}\nexport function getDoneLocalStorage(id) {\n  const storage = JSON.parse(localStorage.getItem('doneRecipes'));\n  let done;\n\n  if (!storage) {\n    done = false;\n  } else {\n    done = storage.find(e => e.id !== id);\n  }\n\n  return done;\n}\n\nfunction getStartedLocalStorage(id) {\n  const storage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  let started;\n\n  if (!storage || storage.meals === undefined) {\n    started = false;\n  } else {\n    started = Object.keys(storage.meals).find(e => e === id);\n  }\n\n  return started;\n}\n\nexport function getIfHasBeenFavorited(id) {\n  const storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  if (storage) {\n    const favorited = storage.some(e => e.id === id);\n    return favorited;\n  }\n\n  return false;\n}\n\nfunction clickFavorite(setIsFavorite, recipeInfo, isFavorite) {\n  // console.log('dentro da funcao:', isFavorite)\n  setIsFavorite(fav => !fav);\n  const {\n    idMeal,\n    strArea,\n    strCategory,\n    strMeal,\n    strMealThumb\n  } = recipeInfo;\n  const mealInfo = {\n    id: idMeal,\n    type: 'comida',\n    area: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb\n  };\n  let storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  if (!storage) {\n    storage = [];\n  }\n\n  if (!isFavorite) {\n    const newStorage = [...storage, mealInfo];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n  }\n\n  if (isFavorite) {\n    const newStorage = storage.filter(e => e.id !== idMeal);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n  }\n}\n\nfunction renderFavoriteButton(setIsFavorite, recipeInfo, isFavorite, goToRoute, id) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"share-and-favourite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"favourite\",\n    onClick: () => clickFavorite(setIsFavorite, recipeInfo, isFavorite),\n    src: favorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, getIfHasBeenFavorited(id) ? /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: favorite,\n    alt: \"favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: notFavorite,\n    alt: \"favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })), goToRoute && /*#__PURE__*/React.createElement(Redirect, {\n    to: `/comidas/${id}/in-progress`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }));\n}\n\nfunction renderShareButton(setHide) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"share-and-favourite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => copyToClipboard(setHide),\n    className: \"favourite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"share-btn\",\n    src: share,\n    alt: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction Buttons() {\n  const [goToRoute, setGoToRoute] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [hide, setHide] = useState(true);\n  const {\n    recipeInfo,\n    id\n  } = useContext(ContextAplication);\n  useEffect(() => {\n    if (getIfHasBeenFavorited(id)) {\n      setIsFavorite(true);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottom-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, renderFavoriteButton(setIsFavorite, recipeInfo, isFavorite, goToRoute, id), !getDoneLocalStorage(id) && !getStartedLocalStorage(id) && /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"start-recipe-btn\",\n    type: \"button\",\n    onClick: () => setGoToRoute(true),\n    className: \"start-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"Iniciar Receita\"), getStartedLocalStorage(id) && !getDoneLocalStorage(id) && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"start-button\",\n    \"data-testid\": \"start-recipe-btn\",\n    onClick: () => setGoToRoute(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Continuar Receita\"), renderShareButton(setHide), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"alert\",\n    hidden: hide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, \"Link copiado!\"), goToRoute && /*#__PURE__*/React.createElement(Redirect, {\n    to: `/comidas/${id}/in-progress`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }));\n}\n\nexport default Buttons;","map":{"version":3,"sources":["/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/FoodButtons.jsx"],"names":["React","useState","useContext","useEffect","Redirect","ContextAplication","copyToClipboard","setHide","navigator","clipboard","writeText","window","location","href","setTimeout","getDoneLocalStorage","id","storage","JSON","parse","localStorage","getItem","done","find","e","getStartedLocalStorage","started","meals","undefined","Object","keys","getIfHasBeenFavorited","favorited","some","clickFavorite","setIsFavorite","recipeInfo","isFavorite","fav","idMeal","strArea","strCategory","strMeal","strMealThumb","mealInfo","type","area","category","alcoholicOrNot","name","image","newStorage","setItem","stringify","filter","renderFavoriteButton","goToRoute","favorite","notFavorite","renderShareButton","share","Buttons","setGoToRoute","hide"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport share from '../images/shareIcon.svg';\nimport notFavorite from '../images/whiteHeartIcon.svg';\nimport favorite from '../images/blackHeartIcon.svg';\nimport { ContextAplication } from '../context/ContextAplication';\n\nexport function copyToClipboard(setHide) {\n  navigator.clipboard.writeText(window.location.href);\n  setHide(false);\n  setTimeout(() => {\n    setHide(true);\n  }, 2000);\n}\n\nexport function getDoneLocalStorage(id) {\n  const storage = JSON.parse(localStorage.getItem('doneRecipes'));\n  let done;\n  if (!storage) {\n    done = false;\n  } else {\n    done = storage.find((e) => e.id !== id);\n  }\n  return done;\n}\n\nfunction getStartedLocalStorage(id) {\n  const storage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  let started;\n  if (!storage || storage.meals === undefined) {\n    started = false;\n  } else {\n    started = Object.keys(storage.meals).find((e) => e === id);\n  }\n  return started;\n}\n\nexport function getIfHasBeenFavorited(id) {\n  const storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (storage) {\n    const favorited = storage.some((e) => e.id === id);\n    return favorited;\n  }\n  return false;\n}\n\nfunction clickFavorite(setIsFavorite, recipeInfo, isFavorite) {\n  // console.log('dentro da funcao:', isFavorite)\n  setIsFavorite((fav) => !fav);\n  const {\n    idMeal, strArea, strCategory, strMeal, strMealThumb,\n  } = recipeInfo;\n  const mealInfo = {\n    id: idMeal,\n    type: 'comida',\n    area: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb,\n  };\n  let storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (!storage) {\n    storage = [];\n  }\n  if (!isFavorite) {\n    const newStorage = [...storage, mealInfo];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n  }\n  if (isFavorite) {\n    const newStorage = storage.filter((e) => e.id !== idMeal);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n  }\n}\n\nfunction renderFavoriteButton(setIsFavorite, recipeInfo, isFavorite, goToRoute, id) {\n  return (\n    <div className=\"share-and-favourite\">\n      <button\n        type=\"button\"\n        className=\"favourite\"\n        onClick={() => clickFavorite(setIsFavorite, recipeInfo, isFavorite)}\n        src={favorite}\n      >\n        {getIfHasBeenFavorited(id)\n          ? <img data-testid=\"favorite-btn\" src={favorite} alt=\"favorite\" />\n          : <img data-testid=\"favorite-btn\" src={notFavorite} alt=\"favorite\" />}\n      </button>\n      {goToRoute && <Redirect to={`/comidas/${id}/in-progress`} />}\n    </div>\n  );\n}\n\nfunction renderShareButton(setHide) {\n  return (\n    <div className=\"share-and-favourite\">\n      <button\n        type=\"button\"\n        onClick={() => copyToClipboard(setHide)}\n        className=\"favourite\"\n      >\n        <img data-testid=\"share-btn\" src={share} alt=\"icon\" />\n      </button>\n    </div>\n  );\n}\n\nfunction Buttons() {\n  const [goToRoute, setGoToRoute] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [hide, setHide] = useState(true);\n  const { recipeInfo, id } = useContext(ContextAplication);\n  useEffect(() => {\n    if (getIfHasBeenFavorited(id)) { setIsFavorite(true); }\n  }, []);\n\n  return (\n    <div className=\"bottom-buttons\">\n      {renderFavoriteButton(setIsFavorite, recipeInfo, isFavorite, goToRoute, id)}\n      {!getDoneLocalStorage(id) && !getStartedLocalStorage(id) && (\n        <button\n          data-testid=\"start-recipe-btn\"\n          type=\"button\"\n          onClick={() => setGoToRoute(true)}\n          className=\"start-button\"\n        >\n          Iniciar Receita\n        </button>\n      )}\n      {getStartedLocalStorage(id) && !getDoneLocalStorage(id) && (\n        <button\n          type=\"button\"\n          className=\"start-button\"\n          data-testid=\"start-recipe-btn\"\n          onClick={() => setGoToRoute(true)}\n        >\n          Continuar Receita\n        </button>\n      )}\n      {renderShareButton(setHide)}\n      <p className=\"alert\" hidden={hide}>Link copiado!</p>\n      {goToRoute && <Redirect to={`/comidas/${id}/in-progress`} />}\n    </div>\n  );\n}\n\nexport default Buttons;\n"]},"metadata":{},"sourceType":"module"}