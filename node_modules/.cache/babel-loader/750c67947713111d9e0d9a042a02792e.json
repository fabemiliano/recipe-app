{"ast":null,"code":"var _jsxFileName = \"/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/LoginScreen.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { ContextAplication } from '../context/ContextAplication';\nimport './CSS/LoginScreen.css';\n\nconst handleChangeInput = (name, event, input, setInput) => {\n  setInput({ ...input,\n    [name]: event\n  });\n};\n\nconst handleFormSubmit = (saveInput, input) => {\n  localStorage.setItem('user', JSON.stringify({\n    email: input.email\n  }));\n  localStorage.setItem('mealsToken', 1);\n  localStorage.setItem('cocktailsToken', 1);\n  saveInput(input);\n};\n\nfunction createForm(input, setInput) {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field col s6 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-login\",\n    \"data-testid\": \"email-input\",\n    onChange: ele => handleChangeInput('email', ele.target.value, input, setInput),\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-login\",\n    \"data-testid\": \"password-input\",\n    onChange: ele => handleChangeInput('password', ele.target.value, input, setInput),\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction LoginScreen() {\n  const {\n    saveInput\n  } = useContext(ContextAplication);\n  const [input, setInput] = useState({\n    email: '',\n    password: ''\n  });\n  const [informations, setInformations] = useState(true);\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    const validEmailRegEx = /^[A-Z0-9_'%=+!`#~$*?^{}&|-]+([.][A-Z0-9_'%=+!`#~$*?^{}&|-]+)*@[A-Z0-9-]+(\\.[A-Z0-9-]+)+$/i;\n    if (!validEmailRegEx.test(input.email) || input.password.length <= 6) return setInformations(true);\n    return setInformations(false);\n  }, [input]);\n  if (user) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/welcome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 20\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"app-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Cooking Time\"), createForm(input, setInput, informations), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \" btn btn-login\",\n    disabled: informations,\n    \"data-testid\": \"login-submit-btn\",\n    onClick: () => handleFormSubmit(saveInput, input),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Entrar\"));\n}\n\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/LoginScreen.jsx"],"names":["React","useState","useEffect","useContext","Redirect","ContextAplication","handleChangeInput","name","event","input","setInput","handleFormSubmit","saveInput","localStorage","setItem","JSON","stringify","email","createForm","ele","target","value","LoginScreen","password","informations","setInformations","user","parse","getItem","validEmailRegEx","test","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { ContextAplication } from '../context/ContextAplication';\n\nimport './CSS/LoginScreen.css';\n\nconst handleChangeInput = (name, event, input, setInput) => {\n  setInput({ ...input, [name]: event });\n};\n\nconst handleFormSubmit = (saveInput, input) => {\n  localStorage.setItem('user', JSON.stringify({ email: input.email }));\n  localStorage.setItem('mealsToken', 1);\n  localStorage.setItem('cocktailsToken', 1);\n\n  saveInput(input);\n};\n\nfunction createForm(input, setInput) {\n  return (\n    <form>\n      <div className=\"input-field col s6 \">\n        <input\n          className=\"input-login\"\n          data-testid=\"email-input\"\n          onChange={(ele) => handleChangeInput('email', ele.target.value, input, setInput)}\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n        />\n        <input\n          className=\"input-login\"\n          data-testid=\"password-input\"\n          onChange={(ele) => handleChangeInput('password', ele.target.value, input, setInput)}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Senha\"\n        />\n      </div>\n    </form>\n  );\n}\n\nfunction LoginScreen() {\n  const { saveInput } = useContext(ContextAplication);\n  const [input, setInput] = useState({ email: '', password: '' });\n  const [informations, setInformations] = useState(true);\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  useEffect(() => {\n    const validEmailRegEx = /^[A-Z0-9_'%=+!`#~$*?^{}&|-]+([.][A-Z0-9_'%=+!`#~$*?^{}&|-]+)*@[A-Z0-9-]+(\\.[A-Z0-9-]+)+$/i;\n\n    if (!validEmailRegEx.test(input.email)\n      || (input.password.length <= 6)) return setInformations(true);\n\n    return setInformations(false);\n  }, [input]);\n\n  if (user) return <Redirect to=\"/welcome\" />;\n\n  return (\n    <div className=\"login-screen\">\n      <h1 className=\"app-name\">Cooking Time</h1>\n      {createForm(input, setInput, informations)}\n      <button\n        type=\"button\"\n        className=\" btn btn-login\"\n        disabled={informations}\n        data-testid=\"login-submit-btn\"\n        onClick={() => handleFormSubmit(saveInput, input)}\n      >\n        Entrar\n      </button>\n    </div>\n  );\n}\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}