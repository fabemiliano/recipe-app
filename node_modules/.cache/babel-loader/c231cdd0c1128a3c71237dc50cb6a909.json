{"ast":null,"code":"var _jsxFileName = \"/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/FavoriteRecipes.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CSS/FavoriteRecipes.css';\nimport favorite from \"../images/blackHeartIcon.svg\";\nimport share from \"../images/shareIcon.svg\";\nimport Header from './Header';\nimport meal from \"../images/meal.svg\";\nimport drink from \"../images/drink.svg\";\nimport filter from \"../images/filter.svg\";\nconst colors = ['#DFBC41', '#e7736a', '#FCF7C9', '#C9DA73', '#D3A585', '#FAC55E', '#FBF8D7', '#63c252', '#C79B7E', '#F9F5BF', '#C67206', '#3EC1D6'];\n\nfunction copyToClipboard(type, id, setHide) {\n  navigator.clipboard.writeText(`http://localhost:3000/${type}s/${id}`).then(() => {\n    setHide(false);\n    setTimeout(() => {\n      setHide(true);\n    }, 2000);\n  });\n}\n\nconsole.log(new Date.lo());\nexport function getColors() {\n  const color = Math.floor(Math.random() * 12);\n  return colors[color];\n}\n\nfunction updateStorage(id, setFavorites) {\n  const storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const newStorage = storage.filter(e => e.id !== id);\n  localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n  setFavorites(newStorage);\n}\n\nfunction filterBy(setFavorites, type) {\n  let storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  if (!storage) {\n    storage = [];\n  }\n\n  setFavorites(storage.filter(e => e.type === type));\n}\n\nfunction getFavorites(setFavorites) {\n  let storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  if (!storage) {\n    storage = [];\n  }\n\n  setFavorites(storage);\n}\n\nfunction renderfilterButtons(setFavorites) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-filter-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button-main-screen\",\n    \"data-testid\": \"filter-by-food-btn\",\n    onClick: () => filterBy(setFavorites, 'comida'),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: meal,\n    alt: \"meal\",\n    width: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), \"Food\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button-main-screen\",\n    \"data-testid\": \"filter-by-drink-btn\",\n    onClick: () => filterBy(setFavorites, 'bebida'),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: drink,\n    alt: \"drink\",\n    width: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), \"Drinks\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button-main-screen\",\n    \"data-testid\": \"filter-by-all-btn\",\n    onClick: () => getFavorites(setFavorites),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: filter,\n    alt: \"filter\",\n    width: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), \"All\"));\n}\n\nfunction FavoriteRecipes() {\n  const [favorites, setFavorites] = useState([]);\n  const [hide, setHide] = useState(true);\n  useEffect(() => {\n    getFavorites(setFavorites);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    screen: \"Receitas Favoritas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-recipes-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"alert-favorite-screen\",\n    hidden: hide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Link copiado!\"), renderfilterButtons(setFavorites), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-recipes-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, favorites.map((e, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-recipes-card\",\n    style: {\n      backgroundColor: getColors()\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${e.type}s/${e.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${i}-horizontal-image`,\n    src: e.image,\n    alt: \"favorite\",\n    width: \"150px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 50\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `/${e.type}s/${e.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${i}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 50\n    }\n  }, e.name)), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${i}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, e.alcoholicOrNot === '' ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 48\n    }\n  }, `${e.area} - ${e.category}`) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 87\n    }\n  }, e.alcoholicOrNot)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-and-share\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => copyToClipboard(e.type, e.id, setHide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${i}-horizontal-share-btn`,\n    src: share,\n    alt: \"share\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => updateStorage(e.id, setFavorites),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${i}-horizontal-favorite-btn`,\n    src: favorite,\n    alt: \"favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }))))))));\n}\n\nexport default FavoriteRecipes;","map":{"version":3,"sources":["/Users/fmartins/Trybe/fabemiliano.github.io/projetos/recipe-app/sd-03-recipes-app-04/src/components/FavoriteRecipes.jsx"],"names":["React","useState","useEffect","Link","Header","colors","copyToClipboard","type","id","setHide","navigator","clipboard","writeText","then","setTimeout","console","log","Date","lo","getColors","color","Math","floor","random","updateStorage","setFavorites","storage","JSON","parse","localStorage","getItem","newStorage","filter","e","setItem","stringify","filterBy","getFavorites","renderfilterButtons","meal","drink","FavoriteRecipes","favorites","hide","map","i","backgroundColor","image","name","alcoholicOrNot","area","category","share","favorite"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CSS/FavoriteRecipes.css';\nimport favorite from '../images/blackHeartIcon.svg';\nimport share from '../images/shareIcon.svg';\nimport Header from './Header';\nimport meal from '../images/meal.svg';\nimport drink from '../images/drink.svg';\nimport filter from '../images/filter.svg';\n\nconst colors = ['#DFBC41', '#e7736a', '#FCF7C9', '#C9DA73', '#D3A585', '#FAC55E', '#FBF8D7', '#63c252', '#C79B7E', '#F9F5BF', '#C67206', '#3EC1D6'];\n\nfunction copyToClipboard(type, id, setHide) {\n  navigator.clipboard.writeText(`http://localhost:3000/${type}s/${id}`)\n    .then(() => {\n      setHide(false);\n      setTimeout(() => {\n        setHide(true);\n      }, 2000);\n    });\n}\n\nconsole.log(new Date.lo)\n\nexport function getColors() {\n  const color = Math.floor(Math.random() * 12);\n  return colors[color];\n}\n\nfunction updateStorage(id, setFavorites) {\n  const storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const newStorage = storage.filter((e) => e.id !== id);\n  localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n  setFavorites(newStorage);\n}\n\nfunction filterBy(setFavorites, type) {\n  let storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (!storage) { storage = []; }\n  setFavorites(storage.filter((e) => e.type === type));\n}\n\nfunction getFavorites(setFavorites) {\n  let storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (!storage) { storage = []; }\n  setFavorites(storage);\n}\n\nfunction renderfilterButtons(setFavorites) {\n  return (\n    <div className=\"favorite-filter-buttons\">\n      <button\n        className=\"button-main-screen\"\n        data-testid=\"filter-by-food-btn\"\n        onClick={() => filterBy(setFavorites, 'comida')}\n        type=\"button\"\n      >\n        <img src={meal} alt=\"meal\" width=\"30px\" />\n        Food\n      </button>\n      <button\n        className=\"button-main-screen\"\n        data-testid=\"filter-by-drink-btn\"\n        onClick={() => filterBy(setFavorites, 'bebida')}\n        type=\"button\"\n      >\n        <img src={drink} alt=\"drink\" width=\"30px\" />\n        Drinks\n      </button>\n      <button\n        className=\"button-main-screen\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={() => getFavorites(setFavorites)}\n        type=\"button\"\n      >\n        <img src={filter} alt=\"filter\" width=\"20px\" />\n        All\n      </button>\n    </div>\n  );\n}\n\nfunction FavoriteRecipes() {\n  const [favorites, setFavorites] = useState([]);\n  const [hide, setHide] = useState(true);\n  useEffect(() => {\n    getFavorites(setFavorites);\n  }, []);\n  return (\n    <div>\n      <Header screen=\"Receitas Favoritas\" />\n      <div className=\"favorite-recipes-screen\">\n        <p className=\"alert-favorite-screen\" hidden={hide}>Link copiado!</p>\n        {renderfilterButtons(setFavorites)}\n        <div className=\"favorite-recipes-container\">\n          {favorites.map((e, i) => (\n            (\n              <div className=\"favorite-recipes-card\" style={{ backgroundColor: getColors() }}>\n                <Link to={`/${e.type}s/${e.id}`}><img data-testid={`${i}-horizontal-image`} src={e.image} alt=\"favorite\" width=\"150px\" /></Link>\n                <Link to={`/${e.type}s/${e.id}`}><p data-testid={`${i}-horizontal-name`}>{e.name}</p></Link>\n                <div data-testid={`${i}-horizontal-top-text`}>\n                  {(e.alcoholicOrNot === '') ? <p>{`${e.area} - ${e.category}`}</p> : <p>{e.alcoholicOrNot}</p>}\n                </div>\n                <div className=\"favorite-and-share\">\n                  <button\n                    type=\"button\"\n                    onClick={() => copyToClipboard(e.type, e.id, setHide)}\n                  >\n                    <img data-testid={`${i}-horizontal-share-btn`} src={share} alt=\"share\" />\n                  </button>\n                  <button\n                    onClick={() => updateStorage(e.id, setFavorites)}\n                    type=\"button\"\n                  >\n                    <img data-testid={`${i}-horizontal-favorite-btn`} src={favorite} alt=\"favorite\" />\n                  </button>\n                </div>\n              </div>\n            )\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FavoriteRecipes;\n"]},"metadata":{},"sourceType":"module"}