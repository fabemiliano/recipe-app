"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StorageMock = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

// Mocking LocalStorage (or similar) ensures no conflict with existing browser
// data and works in test environments like Jest
var StorageMock =
/*#__PURE__*/
function () {
  function StorageMock(store) {
    (0, _classCallCheck2.default)(this, StorageMock);
    (0, _defineProperty2.default)(this, "store", void 0);
    this.store = (0, _objectSpread2.default)({}, store);
  }

  (0, _createClass2.default)(StorageMock, [{
    key: "getItem",
    value: function getItem(key) {
      return this.store[key] || null;
    }
  }, {
    key: "setItem",
    value: function setItem(key, value) {
      this.store[key] = value.toString();
    }
  }, {
    key: "removeItem",
    value: function removeItem(key) {
      delete this.store[key];
    }
  }]);
  return StorageMock;
}();

exports.StorageMock = StorageMock;